{"ast":null,"code":"import _slicedToArray from\"/home/gaian/Desktop/Mine/github/1606Github/react-quotes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import allQuotes from'./Quotes.json';import'./Quotes.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Quotes(){var _useState=useState('Strive not to be a success, but rather to be of value.'),_useState2=_slicedToArray(_useState,2),quote=_useState2[0],setquote=_useState2[1];var _useState3=useState('Albert Einstein'),_useState4=_slicedToArray(_useState3,2),author=_useState4[0],setauthor=_useState4[1];var generateQuote=function generateQuote(){var randomNumber=Math.floor(Math.random()*100)+1;console.log(randomNumber);var newQuote=allQuotes.quotes[randomNumber].quote;var author=allQuotes.quotes[randomNumber].author;setauthor(author);setquote(newQuote);};var backgroundColor={background:\"#d7d7d7\"};return/*#__PURE__*/_jsx(\"div\",{className:\"quotesLayer\",children:/*#__PURE__*/_jsxs(\"div\",{style:backgroundColor,children:[/*#__PURE__*/_jsx(\"h4\",{className:\"quoteStyle\",children:quote}),/*#__PURE__*/_jsxs(\"p\",{className:\"author\",children:[\"Author - \",author]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm quoteBtn\",onClick:generateQuote,children:\"New Quote\"})]})});}export default Quotes;","map":{"version":3,"sources":["/home/gaian/Desktop/Mine/github/1606Github/react-quotes/src/Quotes.js"],"names":["React","useState","allQuotes","Quotes","quote","setquote","author","setauthor","generateQuote","randomNumber","Math","floor","random","console","log","newQuote","quotes","backgroundColor","background"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,eAAtB,CACA,MAAO,cAAP,C,wFAEA,QAASC,CAAAA,MAAT,EAAkB,CAEd,cAA0BF,QAAQ,CAAC,wDAAD,CAAlC,wCAAOG,KAAP,eAAcC,QAAd,eACA,eAA4BJ,QAAQ,CAAC,iBAAD,CAApC,yCAAOK,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,GAAMC,CAAAA,YAAY,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,GAA3B,EAAkC,CAAvD,CACAC,OAAO,CAACC,GAAR,CAAYL,YAAZ,EACA,GAAIM,CAAAA,QAAQ,CAAGb,SAAS,CAACc,MAAV,CAAiBP,YAAjB,EAA+BL,KAA9C,CACA,GAAIE,CAAAA,MAAM,CAAGJ,SAAS,CAACc,MAAV,CAAiBP,YAAjB,EAA+BH,MAA5C,CACAC,SAAS,CAACD,MAAD,CAAT,CACAD,QAAQ,CAACU,QAAD,CAAR,CACH,CAPD,CASA,GAAME,CAAAA,eAAe,CAAG,CACpBC,UAAU,CAAE,SADQ,CAAxB,CAIA,mBACI,YAAK,SAAS,CAAC,aAAf,uBACI,aAAK,KAAK,CAAED,eAAZ,wBACI,WAAI,SAAS,CAAC,YAAd,UAA4Bb,KAA5B,EADJ,cAEI,WAAG,SAAS,CAAC,QAAb,uBAAgCE,MAAhC,GAFJ,cAGI,eAAQ,SAAS,CAAC,qBAAlB,CAAwC,OAAO,CAAEE,aAAjD,uBAHJ,GADJ,EADJ,CASH,CAED,cAAeL,CAAAA,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport allQuotes from './Quotes.json';\nimport './Quotes.css'\n\nfunction Quotes() {\n\n    const [quote, setquote] = useState('Strive not to be a success, but rather to be of value.')\n    const [author, setauthor] = useState('Albert Einstein');\n\n    const generateQuote = () => {\n        const randomNumber = Math.floor(Math.random() * 100) + 1\n        console.log(randomNumber)\n        let newQuote = allQuotes.quotes[randomNumber].quote;\n        let author = allQuotes.quotes[randomNumber].author;\n        setauthor(author);\n        setquote(newQuote);\n    }\n\n    const backgroundColor = {\n        background: \"#d7d7d7\"\n    }\n\n    return (\n        <div className=\"quotesLayer\">\n            <div style={backgroundColor}>\n                <h4 className=\"quoteStyle\">{quote}</h4>\n                <p className=\"author\">Author - {author}</p>\n                <button className=\"btn btn-sm quoteBtn\" onClick={generateQuote}>New Quote</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Quotes\n"]},"metadata":{},"sourceType":"module"}